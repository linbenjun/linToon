%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: Baked Cubemap and Ambient Reflections
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor\n// Available at the Unity
    Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=18935\n1291;62;2530;910;3447.084;1633.934;1;True;False\nNode;AmplifyShaderEditor.CommentaryNode;1;-3344,-464;Inherit;False;2747.43;1069.809;;4;2728;74;73;1526;Cubemap;0,0.5019608,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2343;-544,-1584;Inherit;False;2183.362;1625.836;BRDF1_Unity_PBS;31;2647;2673;2672;2404;2674;2510;2507;2412;2356;2411;2358;2416;2305;2409;2498;2421;2418;2420;2671;2346;224;2687;2716;2731;2732;2717;2763;2830;2827;2832;2719;PBR
    Specular calculation;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2303;-536.894,-8002.865;Inherit;False;4109.129;3135.446;Jordan
    Stevens \"https://www.jordanstevenstechart.com/physically-based-rendering\";32;2223;2261;2188;2193;2256;2187;2202;2206;2203;2207;2191;2204;2247;2249;2197;2205;2255;2259;2252;2246;2210;2192;2227;2250;2251;2196;2194;2201;2195;2248;2254;2189;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1683;3789.013,-6367.176;Inherit;False;1957.591;1257.379;PBR
    Specular Highlights from \"https://google.github.io/filament/Filament.html#toc4.8.3.2\";11;1655;1654;1653;1675;1674;1673;1664;1679;1680;1668;1682;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1526;-3264,-384;Inherit;False;1825.783;548.052;Baked
    Cubemap;14;45;39;32;1609;1524;299;2340;42;27;256;54;325;93;2384;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2728;-1296,336;Inherit;False;660.1;196.5001;Light
    Absorbtion;3;2726;2711;2705;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;327;-3120,-928;Inherit;False;759.979;371.9393;WorldNormals;7;324;86;46;25;28;305;2701;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2668;-544,192;Inherit;False;1555.7;879.9;;17;2501;2495;2494;2496;2490;2502;2500;2508;2487;2504;2509;2505;2721;2499;2486;2733;2825;GGX
    SpecularTerm Indirect;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2223;1224.071,-6478.711;Inherit;False;288;183;From
    XieXe;1;2221;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2344;6217.005,-5517.923;Inherit;False;1023.264;445.9992;something
    something Catlike Coding;7;1827;1825;1829;1824;1828;1826;1832;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2613;-496,2608;Inherit;False;1277.182;591.0021;;12;2626;2625;2621;2619;2618;2617;2615;2724;2736;2837;2833;2848;GGX
    SpecularTerm Vertex Light 3;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;74;-1136,-400;Inherit;False;495.6608;299.5702;Final
    Output;4;0;81;318;108;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2730;-3984,-1872;Inherit;False;1097.243;184.8121;Roughness;6;2306;2314;2761;2729;2417;2474;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1981;5997.176,-6354.52;Inherit;False;1491.847;736.1877;Valves
    Advanced Rendering Specular \"http://media.steampowered.com/apps/valve/2015/Alex_Vlachos_Advanced_VR_Rendering_GDC2015.pdf\";14;1905;1895;1881;1882;1917;1892;1913;1906;1915;1896;1925;1918;1916;1894;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2596;-496,1968;Inherit;False;1277.182;591.0021;;13;2609;2608;2604;2602;2601;2600;2598;2723;2735;2835;2838;2845;2846;GGX
    SpecularTerm Vertex Light 2;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1655;3839.013,-5487.797;Inherit;False;929;378;NoH;7;1678;1676;1670;1669;1662;1661;1656;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2477;829.7351,-2857.203;Inherit;False;827;421;something
    something DisneyDiffuse, dont need that cause Toonshader.;6;2464;2461;2462;2459;2458;2463;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2693;-4704,-1264;Inherit;False;363.8257;863.7064;Shader
    Optimizer Animated States;10;2926;2922;2921;2694;2695;2699;2700;2697;2696;2698;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2720;-3984,-1648;Inherit;False;884;261;Diffuse
    and Specular from Metallic;5;2309;2325;2715;2718;2324;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;284;-4224,-1264;Inherit;False;1038.246;716.1584;Variables;15;2904;2903;323;302;2682;285;1847;2684;300;2686;89;2681;312;2768;2783;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2261;2786.927,-5560.657;Inherit;False;219;206;specularity;1;2216;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1653;4015.013,-6191.796;Inherit;False;739;305;NoV;6;1677;1667;1666;1660;1658;1657;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2630;-496,3248;Inherit;False;1277.182;591.0021;;11;2643;2642;2638;2636;2635;2634;2632;2725;2737;2839;2840;GGX
    SpecularTerm Vertex Light 4;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2297;8063.599,-6124.149;Inherit;False;2477.669;1238.132;Xiexes
    version;17;2276;2280;2285;2281;2284;2283;2282;2275;2289;2287;2286;2279;2122;2104;2102;2103;2290;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;1654;4015.013,-5855.795;Inherit;False;753;309;NoL;4;1672;1671;1665;1659;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2346;-464,-704;Inherit;False;1198.783;404.6946;indirect
    GI/Probe Setup;9;2815;2793;2360;2338;2337;2683;2317;2318;2316;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2875;-5584,-1872;Inherit;False;1525.538;526.08;;11;2894;2892;2884;2876;2885;2896;2891;2886;2880;2879;2899;UV
    Switch;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2384;-2592,-128;Inherit;False;743.6768;233.188;Grayscale
    saturated Light for scaled Lighting and correct Probe Color calculation;2;2380;2817;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2445;831.257,-2411.794;Inherit;False;741;320;Unity
    Legacy, #if UNITY_BRDF_GGX  #else = this;3;2433;2434;2443;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2511;-1128,2352;Inherit;False;497.3;198.7998;VertexLights
    NdL (X=1, Y=2, Z=3, W=4);2;2545;2546;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2231;-2336,-928;Inherit;False;952.9;317.8994;Culled
    Shadows from Specular Setup to give more options to control them in the Metallic
    Workflow as well;5;2824;2357;2821;2823;2831;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;224;-464,-272;Inherit;False;1199.572;282.7841;Dynamic
    Switch Detector (METHOD BY: ACiiL [github.com/ACIIL]) (With help to implement
    in Amplify by: Lyuma [github.com/lyuma]);2;1066;1255;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;328;-2640,-1440;Inherit;False;1251.186;489.9487;Metallic
    Map with Geometric Specular Anti Aliasing;13;2920;2919;2925;290;2910;2911;2688;2907;289;234;240;301;303;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;2513;-496,1328;Inherit;False;1277.182;591.0021;;10;2576;2569;2551;2543;2521;2590;2595;2722;2836;2834;GGX
    SpecularTerm Vertex Light 1;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CommentaryNode;73;-1408,-80;Inherit;False;766.3332;361.3899;Mask
    and Intensity;4;2692;80;288;2898;;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2495;208,432;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;324;-3024,-880;Inherit;False;323;IgnoreNormalsToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;86;-2960,-800;Inherit;False;World
    Normals *;3;4;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2357;-1712,-864;Inherit;False;NdLGGX;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;1609;-1792,-224;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2412;288,-1536;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1925;6771.688,-5997.41;Inherit;False;305;WorldNormals;1;0;OBJECT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.LightColorNode;2827;96,-960;Inherit;False;0;3;COLOR;0;FLOAT3;1;FLOAT;2\nNode;AmplifyShaderEditor.FunctionInput;2821;-2192,-800;Inherit;False;Specular
    Highlight Shadows *;3;1;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2499;-112,800;Inherit;False;2498;SpecularHighlightToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2210;3218.235,-6029.959;Inherit;False;$$$FresnelFunction
    *=  SchlickIORFresnelFunction(_Ior, LdotH)@$;1;Create;3;True;SchlickIORFresnelFunction;FLOAT;0;In;;Inherit;False;True;_Ior;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;FresnelFunction;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2824;-1712,-704;Inherit;False;AmbientShadows;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2647;848,-1152;Inherit;False;2533;VertexLightGGXPBRMetallicWF;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1892;7186.025,-5853.054;Inherit;False;float3
    vSpecularNormalX = vHalfAngleDirWs.xyz - ( vTangentUWs.xyz * dot( vHalfAngleDirWs.xyz,
    vTangentUWs.xyz ) )@$float3 vSpecularNormalY = vHalfAngleDirWs.xyz - ( vTangentVWs.xyz
    * dot( vHalfAngleDirWs.xyz, vTangentVWs.xyz ) )@$float flNDotHX = max( 0.0, dot(
    vSpecularNormalX.xyz, vHalfAngleDirWs.xyz ) )@$float flNDotHkX = pow( flNDotHX,
    vSpecularExponent.x * 0.5 )@$flNDotHkX *= vSpecularScale.x@$float flNDotHY =
    max( 0.0, dot( vSpecularNormalY.xyz, vHalfAngleDirWs.xyz ) )@$float flNDotHkY
    = pow( flNDotHY, vSpecularExponent.y * 0.5 )@$flNDotHkY *= vSpecularScale.y@$float
    flSpecularTerm = flNDotHkX * flNDotHkY@$return flSpecularTerm@;1;Create;5;True;vHalfAngleDirWs;FLOAT3;0,0,0;In;;Inherit;False;True;vTangentUWs;FLOAT3;0,0,0;In;;Inherit;False;True;vTangentVWs;FLOAT3;0,0,0;In;;Inherit;False;True;vSpecularExponent;FLOAT2;0,0;In;;Inherit;False;True;vSpecularScale;FLOAT2;0,0;In;;Inherit;False;Anisotropic
    Specular Lighting;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2360;-144,-528;Inherit;False;1524;BakedCubemap;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;2884;-5296,-1600;Inherit;False;2;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.BreakToComponentsNode;2281;8783.544,-5620.97;Inherit;False;FLOAT2;1;0;FLOAT2;0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.RangedFloatNode;2687;-496,-960;Inherit;False;Property;_CubemapSpecularToggle;Cubemap
    Specular Toggle;126;0;Create;True;0;2;On;0;Off;1;0;False;1;ToggleUI;False;1;1;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.ColorNode;2193;617.106,-6186.145;Inherit;False;Constant;_SpecColorr;SpecColorr;0;0;Create;True;0;0;0;False;0;False;1,1,1,0;0,0,0,0;True;0;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.LightAttenuation;2289;9675.415,-5034.115;Inherit;False;0;1;FLOAT;0\nNode;AmplifyShaderEditor.ClampOpNode;1678;4593.013,-5325.796;Inherit;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2204;3154.424,-6412.501;Inherit;False;   
    float FresnelLight = SchlickFresnel(NdotL)@ $    float FresnelView = SchlickFresnel(NdotV)@$   
    float FresnelDiffuse90 = 0.5 + 2.0 * LdotH*LdotH * roughness@$    return  MixFunction(1,
    FresnelDiffuse90, FresnelLight) * MixFunction(1, FresnelDiffuse90, FresnelView)@;1;Create;4;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;F0;False;False;2;2203;2202;;False;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2817;-2208,-48;Inherit;False;Luminanced
    Lighting;1;2;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1676;4161.011,-5229.796;Inherit;False;305;WorldNormals;1;0;OBJECT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.ViewDirInputsCoordNode;1667;4081.011,-6141.796;Inherit;False;World;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.CustomExpressionNode;2434;1247.257,-2363.794;Half;False;return
    SmithBeckmannVisibilityTerm (nl, nv, roughness)@;1;Create;3;True;nl;FLOAT;0;In;;Inherit;False;True;nv;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithBeckmannVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.AbsOpNode;1666;4481.014,-6077.796;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2521;304,1456;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2305;560,-1312;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2275;9195.801,-5617.324;Inherit;False;   
    half roughness = 1-(_Glossiness * metallicGlossMap.a)@$    roughness *= 1.7 -
    0.7 * roughness@$    half metallic = lerp(0, metallicGlossMap.r * _Metallic,
    reflectivityMask.r)@$    return half4(metallic, 0, 0, roughness)@;4;Create;4;True;metallicGlossMap;FLOAT4;0,0,0,0;In;;Inherit;False;True;_Glossiness;FLOAT;0;In;;Inherit;False;True;_Metallic;FLOAT;0;In;;Inherit;False;True;reflectivityMask;FLOAT4;1,0,0,0;In;;Inherit;False;calcMetallicSmoothness;False;False;0;;False;4;0;FLOAT4;0,0,0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT4;1,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2618;-16,2656;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2830;272,-912;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2104;8289.598,-5802.149;Inherit;False;       
    float a2 = roughness * roughness@$        float d = (NdotH * a2 - NdotH) * NdotH
    + 1.0f@ // 2 mad$        return UNITY_INV_PI * a2 / (d * d + 1e-7f)@ // This
    function is not intended to be running on Mobile,$                                               
    // therefore epsilon is smaller than what can be represented by half;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;XSGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ViewDirInputsCoordNode;1656;3889.012,-5293.796;Inherit;False;World;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;42;-2800,-16;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2739;896,-2336;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2501;-304,352;Inherit;False;NdotAmbientH;1;13;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2576;-16,1376;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2846;-112,2144;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2196;2261.574,-6309.766;Inherit;False;
    float GeometricShadow = 1@$$//the algorithm implementations will go here$return
    GGXGeometricShadowingFunction@$$ return float4(float3(1,1,1) * GeometricShadow,1)@;1;Create;1;True;GGXGeometricShadowingFunction;FLOAT;0;In;;Inherit;False;GeometricShadow
    return;False;False;1;2011;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2635;-16,3296;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ViewDirInputsCoordNode;1824;6507.005,-5387.924;Inherit;False;World;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.GetLocalVarNode;325;-3248,-224;Inherit;False;323;IgnoreNormalsToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2409;-16,-1408;Inherit;False;NdotH
    *;1;9;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2416;320,-1408;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2502;-368,544;Inherit;False;AmbientLdotAmbientH;1;14;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2615;-240,2672;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StaticSwitch;2764;1088,2384;Inherit;False;Property;_Keyword1;Keyword
    1;16;0;Create;True;0;0;0;False;0;False;0;0;0;False;UNITY_PASS_FORWARDBASE;Toggle;2;Key0;Key1;Fetch;False;True;All;9;1;FLOAT3;0,0,0;False;0;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT3;0,0,0;False;8;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.NormalizeNode;28;-2912,-720;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2723;48,2336;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SaturateNode;2380;-2000,-48;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;2823;-1888,-800;Inherit;False;FLOAT3;1;0;FLOAT3;0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.GetLocalVarNode;2726;-1264,416;Inherit;False;289;MetallicTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1668;5116.603,-5549.427;Inherit;False;float
    a2 = a * a@$float f = (NoH * a2 - NoH) * NoH + 1.0@$return a2 / (PI * f * f)@;1;Create;3;True;a;FLOAT;0;In;;Inherit;False;True;NoH;FLOAT;0;In;;Inherit;False;True;PI;FLOAT;0;In;;Inherit;False;D_GGX;True;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1827;6711.369,-5455.095;Inherit;False;reflect(-viewDir,
    normal)@;3;Create;2;True;normal;FLOAT3;0,0,0;In;;Inherit;False;True;viewDir;FLOAT3;0,0,0;In;;Inherit;False;reflectionDir;True;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SaturateNode;1682;5368.102,-5633.441;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2206;3056.532,-6222.779;Inherit;False;Constant;_Float3;Float
    3;0;0;Create;True;0;0;0;False;0;False;1.5;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1825;6475.005,-5467.924;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2246;1687.99,-7776.493;Inherit;False;saturate(roughness
    + _Metallic)@;1;Create;2;True;roughness;FLOAT;0;In;;Inherit;False;True;_Metallic;FLOAT;0;In;;Inherit;False;grazingTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2122;8289.598,-5674.149;Inherit;False;return
    SpecularColor + (1.0 - SpecularColor) * exp2((-5.55473 * VoH) - (6.98316 * VoH))@;3;Create;2;True;SpecularColor;FLOAT3;0,0,0;In;;Inherit;False;True;VoH;FLOAT;0;In;;Inherit;False;F_Schlick;False;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2711;-1056,400;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2733;-16,640;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2362;1774.431,-5030.033;Inherit;False;2357;NdLGGX;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2191;648.5076,-6349.546;Inherit;False;Diffuse
    Color;3;3;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.DynamicAppendNode;2280;9040.544,-5617.97;Inherit;False;FLOAT4;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2279;8572.544,-5625.97;Inherit;False;-1;;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.WorldSpaceLightDirHlpNode;1670;3889.012,-5437.796;Inherit;False;True;1;0;FLOAT;0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.CustomExpressionNode;2600;16,2144;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;1524;-1648,-224;Inherit;False;BakedCubemap;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2642;-16,3712;Inherit;False;2498;SpecularHighlightToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2632;-240,3312;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2505;-96,880;Half;False;return
    float3(unity_SHAr.w, unity_SHAg.w, unity_SHAb.w) + float3(unity_SHBr.z, unity_SHBg.z,
    unity_SHBb.z) / 3.0@;3;Create;0;Ambient;False;False;0;;False;0;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2464;1485.735,-2809.203;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2831;-1712,-784;Inherit;False;AttenGGX;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2194;1628.768,-6173.893;Inherit;False;$$$float3
    SpecularDistribution = specColor@$$//the algorithm implementations will go here$return
    GGXNormalDistribution@$$return float4(float3(1,1,1) * SpecularDistribution.rgb,1)@$;3;Create;2;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;GGXNormalDistribution;FLOAT;0;In;;Inherit;False;SpecularDistribution
    return;False;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2595;-16,1792;Inherit;False;2498;SpecularHighlightToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2844;-112,1504;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2500;-304,256;Inherit;False;NdotAmbientL;1;12;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2545;-1040,2400;Inherit;False;VertexLightShadows;4;15;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2717;976,-1072;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2763;928,-752;Inherit;False;2761;perceptualRoughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WorldReflectionVector;39;-2992,-160;Inherit;False;False;1;0;FLOAT3;0,0,0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.GetLocalVarNode;301;-2304,-1104;Inherit;False;300;Smoothness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;303;-2304,-1392;Inherit;False;302;Metallic;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2306;-3968,-1808;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode;2314;-3776,-1808;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2761;-3616,-1808;Inherit;False;perceptualRoughness;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2729;-3088,-1808;Inherit;False;roughness;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;318;-1104,-352;Inherit;False;316;SpecularReflections;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;240;-2064,-1312;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DiffuseAndSpecularFromMetallicNode;2324;-3728,-1584;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;3;FLOAT3;0;FLOAT3;1;FLOAT;2\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;80;-800,48;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1829;6921.506,-5340.838;Inherit;False;UNITY_SAMPLE_TEXCUBE_LOD($\t\t\tunity_SpecCube0,
    reflectionDir, roughness * UNITY_SPECCUBE_LOD_STEPS$\t\t)@;4;Create;2;True;reflectionDir;FLOAT3;0,0,0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;envSample;True;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2731;80,-1120;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2317;-432,-576;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2404;1312,-1312;Inherit;False;half
    surfaceReduction@$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    surfaceReduction = 1.0-0.28*roughness*perceptualRoughness@      // 1-0.28*x^3
    as approximation for (1/(x^4+1))^(1/2.2) on the domain [0@1]$#   else$       
    surfaceReduction = 1.0 / (roughness*roughness + 1.0)@           // fade \\in
    [0.5@1]$#   endif$$half grazingTerm = saturate(smoothness + (1-oneMinusReflectivity))@$$return$specularTerm
    + surfaceReduction * indirectspecular.rgb * FresnelLerp(specColor, grazingTerm,
    NdotV)@;3;Create;8;True;specularTerm;FLOAT3;0,0,0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;oneMinusReflectivity;FLOAT;0;In;;Inherit;False;True;indirectspecular;FLOAT3;0,0,0;In;;Inherit;False;True;smoothness;FLOAT;0;In;;Inherit;False;True;perceptualRoughness;FLOAT;0;In;;Inherit;False;calcSpecularBase;False;False;0;;False;8;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT;0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.ConditionalIfNode;2338;336,-656;Inherit;False;True;5;0;FLOAT;1;False;1;FLOAT;1;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2282;8962.878,-5467.999;Inherit;False;300;Smoothness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1913;7175.903,-6016.236;Inherit;False;float
    flNDotH = saturate( dot( vNormalWs.xyz, vHalfAngleDirWs.xyz ) )@$float flNDotHk
    = pow( flNDotH, dot( vSpecularExponent.xy, float2( 0.5, 0.5 ) ) )@$flNDotHk *=
    dot( vSpecularScale.xy, float2( 0.33333, 0.33333 ) )@ // 0.33333 is to match
    the spec intensity of the aniso algorithm above$float flSpecularTerm = flNDotHk@$return
    flSpecularTerm@;1;Create;4;True;vNormalWs;FLOAT3;0,0,0;In;;Inherit;False;True;vHalfAngleDirWs;FLOAT3;0,0,0;In;;Inherit;False;True;vSpecularExponent;FLOAT2;0,0;In;;Inherit;False;True;vSpecularScale;FLOAT2;0,0;In;;Inherit;False;Isotropic
    Specular Lighting;False;False;0;;False;4;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT2;0,0;False;3;FLOAT2;0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2674;640,-1472;Inherit;False;GrayscaledLight;1;8;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;300;-3824,-1120;Inherit;False;Smoothness;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2919;-1840,-1136;Inherit;False;Property;_GSAAVariance;GSAAVariance;18;0;Create;True;0;0;0;True;0;False;0.15;0;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2920;-1840,-1056;Inherit;False;Property;_GSAAThreshold;GSAAThreshold;18;0;Create;True;0;0;0;True;0;False;0.1;0;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;1066;-160,-112;Inherit;False;Constant;_MinMipDimension;Min
    Mip Dimension;0;0;Create;True;0;0;0;False;0;False;16;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;290;-1600,-1232;Inherit;False;SmoothnessTex;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2911;-2080,-1120;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.IntNode;2922;-4640,-576;Inherit;False;Property;_GSAAThresholdAnimated;_GSAAThreshold;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.IntNode;2921;-4640,-656;Inherit;False;Property;_GSAAVarianceAnimated;_GSAAVariance;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2891;-5552,-1712;Inherit;False;Property;_ReflectionMaskUVSwitch;Reflection
    Mask UV Switch;86;1;[Enum];Create;True;0;4;UV0;0;UV1;1;UV2;2;UV3;3;0;False;0;False;0;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2899;-5552,-1632;Inherit;False;Property;_ReflectionMaskUVSwitchAnimated;_ReflectionMaskUVSwitch;164;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2474;-3376,-1808;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2683;112,-448;Inherit;False;Property;_WorkflowSwitch;Workflow
    Switch;128;1;[Enum];Create;True;0;3;Dynamic;0;Baked Cubemap only;1;Unitys Metallic
    Workflow;2;0;False;0;False;0;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2283;8988.142,-5394.613;Inherit;False;302;Metallic;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SamplerNode;2688;-2416,-1312;Inherit;True;Property;_MetallicMap;Metallic
    Map;55;0;Create;True;0;0;0;False;0;False;-1;None;None;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.ViewDirInputsCoordNode;1918;6428.687,-6119.267;Inherit;False;World;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.SamplerStateNode;2907;-2592,-1264;Inherit;False;0;0;0;2;-1;None;1;0;SAMPLER2D;;False;1;SAMPLERSTATE;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;289;-1920,-1312;Inherit;False;MetallicTex;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;234;-2064,-1216;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2417;-3216,-1808;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0.002;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2551;-240,1392;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1255;-160,-224;Float;False;#ifndef
    SHADER_TARGET_SURFACE_ANALYSIS$unity_SpecCube0.GetDimensions(testW,testH)@$#endif;1;Call;2;True;testW;FLOAT;0;InOut;half;Half;False;True;testH;FLOAT;0;InOut;half;Half;False;Get
    SpecCube Dimensions;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.SimpleAddOpNode;2673;1168,-1312;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;288;-1024,-32;Inherit;False;285;Intensity;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.WorldReflectionVector;32;-2992,-304;Inherit;False;False;1;0;FLOAT3;0,0,0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.ComponentMaskNode;256;-2240,-336;Inherit;False;True;True;True;False;1;0;COLOR;0,0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2189;881.5079,-6289.546;Inherit;False;$$$float3
    diffuseColor = _Color.rgb * (1-_Metallic) @$float3 specColor = lerp(_SpecularColor.rgb,
    _Color.rgb, _Metallic * 0.5)@$;3;Create;5;True;_Color;FLOAT3;0,0,0;In;;Inherit;False;True;_Metallic;FLOAT;0;In;;Inherit;False;True;_SpecularColor;FLOAT3;0,0,0;In;;Inherit;False;True;diffuseColor;FLOAT3;0,0,0;Out;;Inherit;False;True;specColor;FLOAT3;0,0,0;Out;;Inherit;False;Metallic;True;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;3;FLOAT3;0;FLOAT3;4;FLOAT3;5\nNode;AmplifyShaderEditor.SimpleAddOpNode;2254;1664.191,-7684.229;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.StaticSwitch;2765;1408,2384;Inherit;False;Property;_Keyword1;Keyword
    1;16;0;Create;True;0;0;0;False;0;False;0;0;0;False;VERTEXLIGHT_ON;Toggle;2;Key0;Key1;Fetch;False;True;All;9;1;FLOAT3;0,0,0;False;0;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT3;0,0,0;False;8;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.ConditionalIfNode;2337;144,-656;Inherit;False;False;5;0;FLOAT;0;False;1;INT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;305;-2576,-848;Inherit;False;WorldNormals;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;2543;-288,1600;Inherit;False;VLLdotHOne;1;21;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2494;448,528;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2418;144,-1520;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ConditionalIfNode;2672;960,-1312;Inherit;False;False;5;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SaturateNode;2255;1782.191,-7676.229;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;1895;6149.417,-5839.148;Inherit;False;Constant;_vRoughnessy;vRoughnessy;0;0;Create;True;0;0;0;False;0;False;0.85;0;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;2256;2115.119,-5314.271;Inherit;False;3;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2533;1664,2384;Inherit;False;VertexLightGGXPBRMetallicWF;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2463;1117.735,-2617.203;Half;False;//
    Note: Disney diffuse must be multiply by diffuseAlbedo / PI. This is done outside
    of this function.$$return DisneyDiffuse(NdotV, NdotL, LdotH, perceptualRoughness)*
    NdotL@;1;Create;4;True;NdotV;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;perceptualRoughness;FLOAT;0;In;;Inherit;False;DisneyDiffuse;True;False;0;;False;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ConditionalIfNode;45;-2768,-304;Inherit;False;False;5;0;FLOAT;1;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2601;-16,2016;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2459;877.7351,-2809.203;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.LightColorNode;2462;1133.735,-2729.203;Inherit;False;0;3;COLOR;0;FLOAT3;1;FLOAT;2\nNode;AmplifyShaderEditor.FunctionSubtitle;108;-864,-256;Inherit;False;((*)
    Mandatory);1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2504;32,880;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;2287;9869.438,-5154.572;Inherit;False;Constant;_Float6;Float
    6;0;0;Create;True;0;0;0;False;0;False;0;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2815;528,-656;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.IndirectSpecularLight;2252;1707.106,-7950.145;Inherit;False;World;3;0;FLOAT3;0,0,1;False;1;FLOAT;0.5;False;2;FLOAT;1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;1657;4449.014,-5981.795;Inherit;False;Constant;_Float21;Float
    21;180;0;Create;True;0;0;0;False;0;False;1E-05;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;299;-3168,-16;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;2537;912,2384;Inherit;False;4;4;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.PiNode;1673;4865.014,-5357.796;Inherit;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SamplerNode;2692;-1136,48;Inherit;True;Property;_ReflectionMask;Reflection
    Mask;130;0;Create;True;0;0;0;False;0;False;-1;None;None;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.CustomExpressionNode;2834;-256,1696;Inherit;False;return
    unity_LightColor[0]@;3;Create;0;LightColorZero;False;False;0;;False;0;1;FLOAT3;0\nNode;AmplifyShaderEditor.OneMinusNode;1906;6259.669,-5729.651;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1832;6267.005,-5195.924;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2716;80,-1040;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2192;643.5076,-6266.546;Inherit;False;302;Metallic;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2836;-112,1696;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2736;48,2896;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2201;2021.955,-5747.95;Inherit;False;   
    return SpecularColor + (1 - SpecularColor)* SchlickFresnel(LdotH)@;3;Create;2;True;SpecularColor;FLOAT3;0,0,0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;SchlickFresnelFunction;False;False;1;2020;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2721;-16,720;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;1664;5548.933,-5583.777;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;1658;4609.013,-6077.796;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.ClampOpNode;1665;4593.013,-5757.795;Inherit;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;2841;-784,2560;Inherit;False;FLOAT4;1;0;FLOAT4;0,0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.WorldSpaceLightDirHlpNode;1659;4065.011,-5805.795;Inherit;False;True;1;0;FLOAT;0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.RangedFloatNode;2682;-4176,-832;Inherit;False;Property;_IgnoreNormalsCubemap;Ignore
    Normals Cubemap;133;0;Create;True;0;2;Off;0;On;1;0;False;1;ToggleUI;False;0;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2195;1233.934,-6606.33;Inherit;False;   
    float roughnessSqr = roughness*roughness@$    float NdotHSqr = NdotH*NdotH@$   
    float TanNdotHSqr = (1-NdotHSqr)/NdotHSqr@$    return (1.0/3.1415926535) * sqrt(roughness/(NdotHSqr
    * (roughnessSqr + TanNdotHSqr)))@;1;Create;2;True;roughness;FLOAT;0;In;;Inherit;False;True;NdotH;FLOAT;0;In;;Inherit;False;GGXNormalDistribution;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2839;-112,3616;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2286;10230.27,-5181.018;Inherit;False;   
    float3 specular = float3(0,0,0)@$    float smoothness = max(0.01, (_SpecularArea))@$   
    smoothness *= 1.7 - 0.7 * smoothness@$    $$$        float sndl = saturate(ndl)@$       
    float roughness = 1-smoothness@$        float V = SmithJointGGXVisibilityTerm(sndl,
    vdn, roughness)@$        float F = F_Schlick(float3(0.0, 0.0, 0.0), ldh)@$       
    float D = XSGGXTerm(ndh, roughness*roughness)@$$        float reflection = V
    * D * UNITY_PI@$        float smooth = (max(0, reflection * sndl) * F * attenuation)@$       
    specular = smooth@$$$$    specular *= attenuation * lightCol@$    float3 tintedAlbedoSpecular
    = specular * diffuseColor@$    specular = lerp(specular, tintedAlbedoSpecular,
    _SpecularAlbedoTint)@$    return specular@;3;Create;9;True;lightCol;FLOAT4;0,0,0,0;In;;Inherit;False;True;attenuation;FLOAT;0;In;;Inherit;False;True;ndl;FLOAT;0;In;;Inherit;False;True;_SpecularArea;FLOAT;0;In;;Inherit;False;True;vdn;FLOAT;0;In;;Inherit;False;True;ldh;FLOAT;0;In;;Inherit;False;True;ndh;FLOAT;0;In;;Inherit;False;True;_SpecularAlbedoTint;FLOAT;0;In;;Inherit;False;True;diffuseColor;FLOAT3;0,0,0;In;;Inherit;False;calcDirectSpecular;False;False;0;;False;9;0;FLOAT4;0,0,0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;7;FLOAT;0;False;8;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1679;5087.399,-5680.645;Inherit;False;float
    a = roughness@$float GGXV = NoL * (NoV * (1.0 - a) + a)@$float GGXL = NoV * (NoL
    * (1.0 - a) + a)@$return 0.5 / (GGXV + GGXL)@;1;Create;3;True;roughness;FLOAT;0;In;;Inherit;False;True;NoV;FLOAT;0;In;;Inherit;False;True;NoL;FLOAT;0;In;;Inherit;False;V_SmithGGXCorrelatedFast;True;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2843;-112,1600;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2250;1454.991,-7952.865;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMinOpNode;2259;633.106,-6778.145;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0.991;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2221;1274.071,-6428.711;Inherit;False;       
    float a2 = roughness * roughness@$        float d = (NdotH * a2 - NdotH) * NdotH
    + 1.0f@$        return UNITY_INV_PI * a2 / (d * d + 1e-7f)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;XSGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1828;6680.506,-5196.837;Inherit;False;roughness
    *= 1.7 - 0.7 * roughness@;1;Create;1;True;roughness;FLOAT;0;In;;Inherit;False;roughness;False;False;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2569;16,1504;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2636;-304,3424;Inherit;False;VLNdotHFour;1;20;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2411;-16,-1216;Inherit;False;LdotH
    *;1;11;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2496;176,304;Inherit;False;return
    SmithJointGGXVisibilityTerm (NdotL, NdotV, roughness)@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getSmithJointGGXVisibilityTerm;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2845;-112,2240;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2180;1420.855,-4728.163;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;81;-848,-352;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2205;3262.532,-6218.779;Inherit;False;   
    float f0 = pow(ior-1,2)/pow(ior+1, 2)@$    return f0 + (1-f0) * SchlickFresnel(LdotH)@;1;Create;2;True;ior;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;SchlickIORFresnelFunction;False;False;1;2021;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2487;-96,528;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2247;1412.482,-7759.616;Inherit;False;302;Metallic;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode;1674;4874.191,-6265.987;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2178;1660.855,-4712.163;Inherit;False;//Source:
    https://www.jordanstevenstechart.com/physically-based-rendering$$float3 lightDirection
    = normalize(lerp(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz - posWorld.xyz,_WorldSpaceLightPos0.w))@$$float3
    viewDirection = normalize(_WorldSpaceCameraPos.xyz - posWorld.xyz)@$$float3 halfDirection
    = normalize(viewDirection+lightDirection)@ $$//$$NdotL = max(0.0, dot( normalDirection,
    lightDirection ))@$$NdotH =  max(0.0,dot( normalDirection, halfDirection))@$$NdotV
    =  max(0.0,dot( normalDirection, viewDirection))@$$LdotH =  max(0.0,dot(lightDirection,
    halfDirection))@;7;Create;6;True;normalDirection;FLOAT3;0,0,0;In;;Inherit;False;True;posWorld;FLOAT3;0,0,0;In;;Inherit;False;True;NdotL;FLOAT;0;Out;;Inherit;False;True;NdotH;FLOAT;0;Out;;Inherit;False;True;NdotV;FLOAT;0;Out;;Inherit;False;True;LdotH;FLOAT;0;Out;;Inherit;False;Dots;False;False;0;;False;7;0;FLOAT;0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT;0;False;5;FLOAT;0;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2848;-112,2880;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2718;-3392,-1504;Inherit;False;OneMinusReflectivity;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2735;48,2256;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;2461;1341.735,-2809.203;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2202;3180.424,-6489.501;Inherit;False;   
    float x = clamp(1.0-i, 0.0, 1.0)@$    float x2 = x*x@$    return x2*x2*x@;1;Create;1;True;i;FLOAT;1;In;;Inherit;False;SchlickFresnel;False;False;0;;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2608;-16,2432;Inherit;False;2498;SpecularHighlightToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2498;-224,-960;Inherit;False;SpecularHighlightToggle;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2609;304,2096;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2284;9772.141,-5634.612;Inherit;False;XSmetallicMAP;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;2546;-784,2400;Inherit;False;FLOAT4;1;0;FLOAT4;0,0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.FunctionInput;2604;-288,2240;Inherit;False;VLLdotHTwo;1;22;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.BreakToComponentsNode;2276;9492.8,-5617.324;Inherit;False;FLOAT4;1;0;FLOAT4;0,0,0,0;False;16;FLOAT;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4;FLOAT;5;FLOAT;6;FLOAT;7;FLOAT;8;FLOAT;9;FLOAT;10;FLOAT;11;FLOAT;12;FLOAT;13;FLOAT;14;FLOAT;15\nNode;AmplifyShaderEditor.GetLocalVarNode;1660;4065.011,-5997.795;Inherit;False;305;WorldNormals;1;0;OBJECT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.OneMinusNode;1826;6521.506,-5196.837;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SamplerNode;54;-2544,-336;Inherit;True;Property;_Cubemap;Cubemap;0;1;[HDR];Create;True;0;0;0;False;0;False;-1;None;None;True;0;False;white;LockedToCube;False;Object;-1;MipLevel;Cube;8;0;SAMPLERCUBE;;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT3;0,0,0;False;4;FLOAT3;0,0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.DynamicAppendNode;1896;6443.417,-5880.148;Inherit;False;FLOAT2;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2249;2137.464,-7785.089;Inherit;False;indirectSpecular
    * FresnelLerp(specColor,grazingTerm,NdotV) * max(0.15,_Metallic) * (1-roughness*roughness*
    roughness)@;3;Create;6;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;indirectSpecular;FLOAT3;0,0,0;In;;Inherit;False;True;grazingTerm;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;_Metallic;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;unityIndirectSpecularity;False;False;1;2248;;False;6;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1672;4065.011,-5661.795;Inherit;False;305;WorldNormals;1;0;OBJECT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2722;48,1696;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;2638;-304,3520;Inherit;False;VLLdotHFour;1;24;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2724;48,2976;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2725;48,3616;Inherit;False;2715;SpecColor;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.DotProductOpNode;1671;4353.014,-5757.795;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1905;6047.176,-5733.332;Inherit;False;300;Smoothness;1;0;OBJECT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2602;-288,2144;Inherit;False;VLNdotHTwo;1;18;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.LightColorNode;2290;9846.139,-5310.977;Inherit;False;0;3;COLOR;0;FLOAT3;1;FLOAT;2\nNode;AmplifyShaderEditor.CustomExpressionNode;2102;8289.598,-6074.149;Inherit;False;       
    float t = Pow5 (1 - cosA)@   // ala Schlick interpoliation$        return F0
    + (1-F0) * t@;3;Create;2;True;F0;FLOAT3;0,0,0;In;;Inherit;False;True;cosA;FLOAT;0;In;;Inherit;False;XSFresnelTerm;False;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;1661;4145.011,-5389.796;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;1894;6153.208,-5936.399;Inherit;False;Constant;_vRoughnessx;vRoughnessx;0;0;Create;True;0;0;0;False;0;False;1;0;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2227;2100,-5017.135;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.WorldPosInputsNode;2368;1452.855,-4632.163;Inherit;False;0;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.CustomExpressionNode;2103;8289.598,-5946.149;Inherit;False;       
    float t = Pow5 (1 - cosA)@   // ala Schlick interpoliation$        return lerp
    (F0, F90, t)@;3;Create;3;True;F0;FLOAT3;0,0,0;In;;Inherit;False;True;F90;FLOAT3;0,0,0;In;;Inherit;False;True;cosA;FLOAT;0;In;;Inherit;False;XSFresnelLerp;False;False;0;;False;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;1680;4583.746,-6317.176;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2443;879.257,-2203.794;Half;False;return
    PerceptualRoughnessToSpecPower (perceptualRoughness)@;1;Create;1;True;perceptualRoughness;FLOAT;0;In;;Inherit;False;getPerceptualRoughnessToSpecPower;False;False;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2621;-304,2880;Inherit;False;VLLdotHThree;1;23;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2203;3184.696,-6616.404;Inherit;False;return 
    j * x + i * (1.0 - x)@;1;Create;3;True;i;FLOAT;1;In;;Inherit;False;True;j;FLOAT;0;In;;Inherit;False;True;x;FLOAT;0;In;;Inherit;False;MixFunction;False;False;0;;False;3;0;FLOAT;1;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2825;-208,960;Inherit;False;2824;AmbientShadows;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2340;-2944,64;Inherit;False;Constant;_Float0;Float
    0;0;0;Create;True;0;0;0;False;0;False;10;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.WorldSpaceLightDirHlpNode;1915;6322.94,-6304.52;Inherit;False;True;1;0;FLOAT;0;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.ConditionalIfNode;46;-2736,-848;Inherit;False;False;5;0;FLOAT;1;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;3;FLOAT3;0,0,0;False;4;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2847;-112,2784;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2838;-112,2336;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2701;-2528,-640;Inherit;False;//This
    Shader was made possible by Moriohs Toon Shader (https://gitlab.com/xMorioh/moriohs-toon-shader);7;Create;0;SourceDeclaration;False;True;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.DotProductOpNode;1677;4353.014,-6077.796;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.NormalizeNode;1916;6834.769,-6095.499;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.DotProductOpNode;1662;4433.014,-5325.796;Inherit;False;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.OneMinusNode;27;-2944,-16;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2433;1247.257,-2235.794;Half;False;return
    NDFBlinnPhongNormalizedTerm (nh, perceptualRoughness)@;1;Create;2;True;nh;FLOAT;0;In;;Inherit;False;True;perceptualRoughness;FLOAT;0;In;;Inherit;False;getNDFBlinnPhongNormalizedTerm;False;False;1;2443;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2850;-112,3520;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1881;6610.409,-5907.827;Inherit;False;o_flDiffuseExponentOut
    = ( ( 1.0 - ( vRoughness.x + vRoughness.y ) * 0.5 ) * 0.8 ) + 0.6@ // Outputs
    0.6-1.4$o_vSpecularExponentOut.xy = exp2( pow( 1.0 - vRoughness.xy, 1.5 ) * 14.0
    )@ // Outputs 1-16384$o_vSpecularScaleOut.xy = 1.0 - saturate( vRoughness.xy
    * 0.5 )@ // This is a pseudo energy conserving scalar for the roughness exponent;7;Create;4;True;vRoughness;FLOAT2;0,0;In;;Inherit;False;True;o_flDiffuseExponentOut;FLOAT;0;Out;;Inherit;False;True;o_vSpecularExponentOut;FLOAT2;0,0;Out;;Inherit;False;True;o_vSpecularScaleOut;FLOAT2;0,0;Out;;Inherit;False;RoughnessEllipseToScaleAndExp;False;False;0;;False;5;0;FLOAT;0;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;4;FLOAT;0;FLOAT;3;FLOAT2;4;FLOAT2;5\nNode;AmplifyShaderEditor.CustomExpressionNode;2197;1945.574,-6523.766;Inherit;False;   
    float roughnessSqr = roughness*roughness@$    float NdotLSqr = NdotL*NdotL@$   
    float NdotVSqr = NdotV*NdotV@$$$    float SmithL = (2 * NdotL)/ (NdotL + sqrt(roughnessSqr
    +$ ( 1-roughnessSqr) * NdotLSqr))@$    float SmithV = (2 * NdotV)/ (NdotV + sqrt(roughnessSqr
    + $( 1-roughnessSqr) * NdotVSqr))@$$$\tfloat Gs =  (SmithL * SmithV)@$\treturn
    Gs@;1;Create;3;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;GGXGeometricShadowingFunction;False;False;0;;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2207;2959.771,-5740.249;Inherit;False;(SpecularDistribution
    * FresnelFunction * GeometricShadow) / (4 * (  NdotL * NdotV))@;3;Create;5;True;SpecularDistribution;FLOAT3;0,0,0;In;;Inherit;False;True;FresnelFunction;FLOAT3;0,0,0;In;;Inherit;False;True;GeometricShadow;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;NdotV;FLOAT;0;In;;Inherit;False;specularity;False;False;0;;False;5;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;2590;-288,1504;Inherit;False;VLNdotHOne;1;17;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2420;144,-1424;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2695;-4640,-1216;Inherit;False;Property;_OptimizerExcludeCubemap;OptimizerExcludeCubemap;23;0;Create;True;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.FunctionInput;93;-3216,-304;Inherit;False;Tangent
    Normals *;3;5;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2251;1454.991,-7872.865;Inherit;False;305;WorldNormals;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;89;-4096,-928;Inherit;False;MainTex
    *;3;6;False;1;0;FLOAT3;1,1,1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;2681;-4176,-1216;Inherit;False;Property;_CubemapIntensity;Cubemap
    Intensity;139;0;Create;True;0;0;0;False;0;False;1;1;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2216;2836.927,-5510.657;Inherit;False;3;3;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;2;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;2892;-5296,-1488;Inherit;False;3;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2486;-96,336;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;2894;-5296,-1824;Inherit;False;0;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.IntNode;2694;-4640,-1136;Inherit;False;Property;_CubemapIntensityAnimated;_CubemapIntensity;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2783;-3824,-736;Inherit;False;AO;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2619;-304,2784;Inherit;False;VLNdotHThree;1;19;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2421;144,-1232;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;312;-3824,-928;Inherit;False;MainTex;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.IndirectDiffuseLighting;2458;1085.735,-2809.203;Inherit;False;World;1;0;FLOAT3;0,0,1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;1675;4933.812,-5554.594;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2507;48,-1312;Inherit;False;CorrectedNdotV;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2187;773.106,-6731.145;Inherit;False;float
    roughness = 1- (_Glossiness * _Glossiness)@   // 1 - smoothness*smoothness$roughness
    = roughness * roughness@$return roughness@;1;Create;1;True;_Glossiness;FLOAT;0;In;;Inherit;False;roughness;True;False;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2898;-1392,16;Inherit;False;2896;ReflectionMaskUVSwitch;1;0;OBJECT;;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.TexCoordVertexDataNode;2876;-5296,-1712;Inherit;False;1;2;0;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2490;-96,240;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2626;304,2736;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;2880;-4464,-1712;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionInput;2671;-112,-1312;Inherit;False;CorrNdotV
    *;1;10;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2508;-304,448;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.NormalizeNode;1669;4273.012,-5341.796;Inherit;False;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2188;393.106,-6778.145;Inherit;False;300;Smoothness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2737;48,3536;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;316;1808,-1312;Inherit;False;SpecularReflections;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2248;2202.964,-7925.823;Inherit;False;\tfloat
    t = SchlickFresnel(d)@\t$\treturn lerp (x, y, t)@;3;Create;3;True;x;FLOAT3;0,0,0;In;;Inherit;False;True;y;FLOAT3;0,0,0;In;;Inherit;False;True;d;FLOAT;0;In;;Inherit;False;FresnelLerp;False;False;1;2202;;False;3;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2793;320,-448;Inherit;False;2783;AO;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2617;16,2784;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2832;80,-848;Inherit;False;2831;AttenGGX;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2926;-4640,-496;Inherit;False;Property;_EnableGSAAAnimated;_EnableGSAA;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2925;-1568,-1136;Inherit;False;Property;_EnableGSAA;Enable
    GSAA;465;0;Create;True;0;2;Off;0;On;1;0;True;1;ToggleUI;False;1;1;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2643;304,3376;Inherit;False;//
    \"GGX with roughness to 0 would mean no specular at all, using max(roughness,
    0.002) here to match HDrenderloop roughness remapping.\"$$float specularTerm
    = GGXVisibilityTerm * GGXTerm * UNITY_PI@ // Torrance-Sparrow model, Fresnel
    is applied later$$// Gamma Space support$#   ifdef UNITY_COLORSPACE_GAMMA$       
    specularTerm = sqrt(max(1e-4h, specularTerm))@$#   endif$$// specularTerm * nl
    can be NaN on Metal in some cases, use max() to make sure it's a sane value$specularTerm
    = max(0, specularTerm * NdotL)@$$//Toggle specularTerm$if (specularTermToggle
    == 1) {$// To provide true Lambert lighting, we need to be able to kill specular
    completely.$\tspecularTerm *= any(specColor) ? 1.0 : 0.0@$}$else {$\tspecularTerm
    = 0@$}$$return$specularTerm * lightcolor * FresnelTerm(specColor, LdotH)@;3;Create;8;True;GGXVisibilityTerm;FLOAT;0;In;;Inherit;False;True;GGXTerm;FLOAT;0;In;;Inherit;False;True;NdotL;FLOAT;0;In;;Inherit;False;True;LdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;True;specColor;FLOAT3;0,0,0;In;;Inherit;False;True;lightcolor;FLOAT3;0,0,0;In;;Inherit;False;True;specularTermToggle;FLOAT;0;In;;Inherit;False;calcSpecularTerm;False;False;0;;False;8;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT3;0,0,0;False;6;FLOAT3;0,0,0;False;7;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2837;-112,2976;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.FunctionInput;2903;-4096,-640;Inherit;False;SamplerState;13;0;False;1;0;SAMPLERSTATE;0;False;1;SAMPLERSTATE;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2734;48,1616;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2697;-4640,-976;Inherit;False;Property;_MetallicAnimated;_Metallic;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.FunctionInput;1847;-4096,-736;Inherit;False;AmbientOcclusion
    *;1;7;False;1;0;FLOAT;1;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2696;-4640,-1056;Inherit;False;Property;_CubemapsmoothnessAnimated;_Cubemapsmoothness;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;302;-3632,-1024;Inherit;False;Metallic;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;2684;-4176,-1120;Inherit;False;Property;_Cubemapsmoothness;Cubemap
    smoothness;94;0;Create;True;0;0;0;False;0;False;0.75;0.75;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2833;-256,2976;Inherit;False;return
    unity_LightColor[2]@;3;Create;0;LightColorZTwo;False;False;0;;False;0;1;FLOAT3;0\nNode;AmplifyShaderEditor.IntNode;2698;-4640,-896;Inherit;False;Property;_IgnoreNormalsCubemapAnimated;_IgnoreNormalsCubemap;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.IndirectSpecularLight;2316;-144,-656;Inherit;False;World;3;0;FLOAT3;0,0,1;False;1;FLOAT;0.5;False;2;FLOAT;1;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;285;-3824,-1216;Inherit;False;Intensity;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2715;-3392,-1584;Inherit;False;SpecColor;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2625;-16,3072;Inherit;False;2498;SpecularHighlightToggle;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2309;-3936,-1520;Inherit;False;289;MetallicTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2768;-3904,-1024;Inherit;False;return
    GammaToLinearSpaceExact(LinearIn)@;1;Create;1;True;LinearIn;FLOAT;0;In;;Inherit;False;getGammaToLinearSpaceExact;False;False;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2325;-3936,-1600;Inherit;False;312;MainTex;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2732;976,-992;Inherit;False;2729;roughness;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2700;-4640,-736;Inherit;False;Property;_WorkflowSwitchAnimated;_WorkflowSwitch;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2835;-256,2336;Inherit;False;return
    unity_LightColor[1]@;3;Create;0;LightColorZOne;False;False;0;;False;0;1;FLOAT3;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2719;912,-912;Inherit;False;2718;OneMinusReflectivity;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;2879;-4592,-1712;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2510;640,-1392;Inherit;False;2509;SHSpecular;1;0;OBJECT;;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SamplerStateNode;2908;-1328,112;Inherit;False;0;0;0;2;-1;None;1;0;SAMPLER2D;;False;1;SAMPLERSTATE;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2285;9756.141,-5506.612;Inherit;False;XSroughnessMAP;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2896;-4336,-1712;Inherit;False;ReflectionMaskUVSwitch;-1;True;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2840;-272,3616;Inherit;False;return
    unity_LightColor[3]@;3;Create;0;LightColorZThree;False;False;0;;False;0;1;FLOAT3;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;323;-3824,-832;Inherit;False;IgnoreNormalsToggle;-1;True;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2598;-240,2032;Inherit;False;2507;CorrectedNdotV;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.IntNode;2699;-4640,-816;Inherit;False;Property;_CubemapSpecularToggleAnimated;_CubemapSpecularToggle;23;0;Create;False;0;0;0;True;1;ToggleUI;False;0;0;False;0;1;INT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;1917;6706.769,-6143.499;Inherit;False;2;2;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.SimpleMaxOpNode;2849;-112,3424;Inherit;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2842;-1008,2560;Inherit;False;VertexLightAtten;4;16;False;1;0;FLOAT4;0,0,0,0;False;1;FLOAT4;0\nNode;AmplifyShaderEditor.WorldNormalVector;25;-3104,-720;Inherit;False;False;1;0;FLOAT3;0,0,1;False;4;FLOAT3;0;FLOAT;1;FLOAT;2;FLOAT;3\nNode;AmplifyShaderEditor.CustomExpressionNode;2634;16,3424;Inherit;False;return
    GGXTerm (NdotH, roughness)@;1;Create;2;True;NdotH;FLOAT;0;In;;Inherit;False;True;roughness;FLOAT;0;In;;Inherit;False;getGGXTerm;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2358;-48,-1504;Inherit;False;2357;NdLGGX;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2318;-432,-656;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.TextureTransformNode;2885;-4848,-1712;Inherit;False;2692;False;1;0;SAMPLER2D;;False;2;FLOAT2;0;FLOAT2;1\nNode;AmplifyShaderEditor.CustomExpressionNode;2886;-5072,-1712;Inherit;False;if
    (UVSwitchProp == 0)$\treturn UV0@$else if (UVSwitchProp == 1)$\treturn UV1@$else
    if (UVSwitchProp == 2)$\treturn UV2@$else$\treturn UV3@;2;Create;5;True;UVSwitchProp;FLOAT;0;In;;Inherit;False;True;UV0;FLOAT2;0,0;In;;Inherit;False;True;UV1;FLOAT2;0,0;In;;Inherit;False;True;UV2;FLOAT2;0,0;In;;Inherit;False;True;UV3;FLOAT2;0,0;In;;Inherit;False;UVSwitch;False;False;0;;False;5;0;FLOAT;0;False;1;FLOAT2;0,0;False;2;FLOAT2;0,0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;1882;7174.13,-6126.819;Inherit;False;return
    pow( flNDotL, flDiffuseExponent ) * ( ( flDiffuseExponent + 1.0 ) * 0.5 )@ ;1;Create;2;True;flDiffuseExponent;FLOAT;0;In;;Inherit;False;True;flNDotL;FLOAT;0;In;;Inherit;False;Isotropic
    Diffuse Lighting;False;False;0;;False;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2904;-3824,-640;Inherit;False;SS;-1;True;1;0;SAMPLERSTATE;;False;1;SAMPLERSTATE;0\nNode;AmplifyShaderEditor.GetLocalVarNode;2356;944,-832;Inherit;False;290;SmoothnessTex;1;0;OBJECT;;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RegisterLocalVarNode;2509;768,528;Inherit;False;SHSpecular;-1;True;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.RangedFloatNode;2686;-4176,-1024;Half;False;Property;_Metallic;Metallic;140;0;Create;True;0;0;0;False;0;False;0.5;0.5;0;1;0;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;2910;-1840,-1233;Inherit;False;//
    Kaplanyan 2016, \"Stable specular highlights\"$// Tokuyoshi 2017, \"Error Reduction
    and Simplification for Shading Anti-Aliasing\"$// Tokuyoshi and Kaplanyan 2019,
    \"Improved Geometric Specular Antialiasing\"$$// This implementation is meant
    for deferred rendering in the original paper but$// we use it in forward rendering
    as well (as discussed in Tokuyoshi and Kaplanyan$// 2019). The main reason is
    that the forward version requires an expensive transform$// of the float vector
    by the tangent frame for every light. This is therefore an$// approximation but
    it works well enough for our needs and provides an improvement$// over our original
    implementation based on Vlachos 2015, \"Advanced VR Rendering\".$$if (_EnableGSAA
    == 1)${$    float3 du = ddx(worldNormal)@$    float3 dv = ddy(worldNormal)@$$   
    float variance = _GSAAVariance * (dot(du, du) + dot(dv, dv))@$$    float perceptualRoughness
    = 1-smoothness@$    float roughness = perceptualRoughness * perceptualRoughness@$   
    float kernelRoughness = min(2.0 * variance, _GSAAThreshold)@$    float squareRoughness
    = saturate(roughness * roughness + kernelRoughness)@$$    return 1-sqrt(sqrt(squareRoughness))@$}$else${$   
    return smoothness@$};1;Create;2;True;worldNormal;FLOAT3;0,0,0;In;;Inherit;False;True;smoothness;FLOAT;0;In;;Inherit;False;GSAA_Filament;False;False;0;;False;2;0;FLOAT3;0,0,0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;2705;-912,400;Inherit;False;False;-1;Cubemap
    Light absorbtion;1;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;-896,-176;Inherit;False;True;-1;Cubemap
    Reflections;0;False;1;0;FLOAT3;0,0,0;False;1;FLOAT3;0\nNode;AmplifyShaderEditor.CommentaryNode;2345;2050,-5067.135;Inherit;False;219;183;FinalDiffuse;0;;1,1,1,1;0;0\nWireConnection;2495;0;2486;0\nWireConnection;2495;1;2733;0\nWireConnection;2357;0;2823;0\nWireConnection;1609;0;256;0\nWireConnection;1609;1;2380;0\nWireConnection;2412;0;2418;0\nWireConnection;2412;1;2507;0\nWireConnection;2412;2;2731;0\nWireConnection;2210;0;2205;0\nWireConnection;2210;1;2206;0\nWireConnection;2210;2;2178;7\nWireConnection;2824;0;2823;2\nWireConnection;1892;0;1916;0\nWireConnection;1892;1;1925;0\nWireConnection;1892;2;1925;0\nWireConnection;1892;3;1881;4\nWireConnection;1892;4;1881;5\nWireConnection;2281;0;2279;0\nWireConnection;1678;0;1662;0\nWireConnection;2204;0;2178;4\nWireConnection;2204;1;2178;6\nWireConnection;2204;2;2178;7\nWireConnection;2204;3;2187;0\nWireConnection;1666;0;1677;0\nWireConnection;2521;0;2576;0\nWireConnection;2521;1;2569;0\nWireConnection;2521;2;2546;0\nWireConnection;2521;3;2843;0\nWireConnection;2521;4;2734;0\nWireConnection;2521;5;2722;0\nWireConnection;2521;6;2836;0\nWireConnection;2521;7;2595;0\nWireConnection;2305;0;2412;0\nWireConnection;2305;1;2416;0\nWireConnection;2305;2;2418;0\nWireConnection;2305;3;2421;0\nWireConnection;2305;4;2731;0\nWireConnection;2305;5;2716;0\nWireConnection;2305;6;2830;0\nWireConnection;2305;7;2498;0\nWireConnection;2275;0;2280;0\nWireConnection;2275;1;2282;0\nWireConnection;2275;2;2283;0\nWireConnection;2618;0;2546;2\nWireConnection;2618;1;2615;0\nWireConnection;2618;2;2736;0\nWireConnection;2830;0;2827;1\nWireConnection;2830;1;2832;0\nWireConnection;42;0;27;0\nWireConnection;42;1;2340;0\nWireConnection;2576;0;2546;0\nWireConnection;2576;1;2551;0\nWireConnection;2576;2;2734;0\nWireConnection;2846;0;2602;0\nWireConnection;2196;0;2197;0\nWireConnection;2635;0;2546;3\nWireConnection;2635;1;2632;0\nWireConnection;2635;2;2737;0\nWireConnection;2416;0;2420;0\nWireConnection;2416;1;2731;0\nWireConnection;2764;0;2537;0\nWireConnection;28;0;25;0\nWireConnection;2380;0;2817;0\nWireConnection;2823;0;2821;0\nWireConnection;1668;0;1675;0\nWireConnection;1668;1;1678;0\nWireConnection;1668;2;1673;0\nWireConnection;1827;0;1825;0\nWireConnection;1827;1;1824;0\nWireConnection;1682;0;1679;0\nWireConnection;2246;0;2187;0\nWireConnection;2246;1;2247;0\nWireConnection;2711;0;80;0\nWireConnection;2711;1;2726;0\nWireConnection;2280;0;2281;0\nWireConnection;2280;3;2281;1\nWireConnection;2600;0;2846;0\nWireConnection;2600;1;2735;0\nWireConnection;1524;0;1609;0\nWireConnection;2464;0;2461;0\nWireConnection;2464;1;2463;0\nWireConnection;2831;0;2823;1\nWireConnection;2194;0;2189;5\nWireConnection;2194;1;2221;0\nWireConnection;2844;0;2590;0\nWireConnection;2314;0;2306;0\nWireConnection;2761;0;2314;0\nWireConnection;2729;0;2417;0\nWireConnection;240;0;303;0\nWireConnection;240;1;2688;1\nWireConnection;2324;0;2325;0\nWireConnection;2324;1;2309;0\nWireConnection;80;0;288;0\nWireConnection;80;1;2692;1\nWireConnection;1829;0;1827;0\nWireConnection;1829;1;1828;0\nWireConnection;2404;0;2673;0\nWireConnection;2404;1;2507;0\nWireConnection;2404;2;2717;0\nWireConnection;2404;3;2732;0\nWireConnection;2404;4;2719;0\nWireConnection;2404;5;2815;0\nWireConnection;2404;6;2356;0\nWireConnection;2404;7;2763;0\nWireConnection;2338;1;2683;0\nWireConnection;2338;2;2337;0\nWireConnection;2338;3;2360;0\nWireConnection;2338;4;2316;0\nWireConnection;1913;0;1925;0\nWireConnection;1913;1;1916;0\nWireConnection;1913;2;1881;4\nWireConnection;1913;3;1881;5\nWireConnection;300;0;2684;0\nWireConnection;290;0;2910;0\nWireConnection;2474;0;2761;0\nWireConnection;2474;1;2761;0\nWireConnection;2688;7;2907;0\nWireConnection;289;0;240;0\nWireConnection;234;0;2688;4\nWireConnection;234;1;301;0\nWireConnection;2417;0;2474;0\nWireConnection;2673;0;2672;0\nWireConnection;2673;1;2647;0\nWireConnection;32;0;93;0\nWireConnection;256;0;54;0\nWireConnection;2189;0;2191;0\nWireConnection;2189;1;2192;0\nWireConnection;2189;2;2193;0\nWireConnection;2254;0;2187;0\nWireConnection;2254;1;2247;0\nWireConnection;2765;0;2764;0\nWireConnection;2337;0;1255;2\nWireConnection;2337;1;1066;0\nWireConnection;2337;2;2316;0\nWireConnection;2337;3;2316;0\nWireConnection;2337;4;2360;0\nWireConnection;305;0;46;0\nWireConnection;2494;0;2496;0\nWireConnection;2494;1;2495;0\nWireConnection;2494;2;2490;0\nWireConnection;2494;3;2487;0\nWireConnection;2494;4;2733;0\nWireConnection;2494;5;2721;0\nWireConnection;2494;6;2504;0\nWireConnection;2494;7;2499;0\nWireConnection;2418;1;2358;0\nWireConnection;2672;0;2674;0\nWireConnection;2672;2;2305;0\nWireConnection;2672;3;2510;0\nWireConnection;2255;0;2254;0\nWireConnection;2256;0;2189;4\nWireConnection;2256;1;2216;0\nWireConnection;2256;2;2249;0\nWireConnection;2533;0;2765;0\nWireConnection;45;1;325;0\nWireConnection;45;2;32;0\nWireConnection;45;3;39;0\nWireConnection;2601;0;2546;1\nWireConnection;2601;1;2598;0\nWireConnection;2601;2;2735;0\nWireConnection;108;0;81;0\nWireConnection;2504;0;2505;0\nWireConnection;2504;1;2825;0\nWireConnection;2815;0;2338;0\nWireConnection;2815;1;2793;0\nWireConnection;2252;0;2251;0\nWireConnection;2252;1;2250;0\nWireConnection;2537;0;2521;0\nWireConnection;2537;1;2609;0\nWireConnection;2537;2;2626;0\nWireConnection;2537;3;2643;0\nWireConnection;2692;1;2898;0\nWireConnection;2692;7;2908;0\nWireConnection;1906;0;1905;0\nWireConnection;2836;0;2834;0\nWireConnection;2836;1;2841;0\nWireConnection;2201;0;2193;0\nWireConnection;2201;1;2178;7\nWireConnection;1664;0;1682;0\nWireConnection;1664;1;1668;0\nWireConnection;1658;0;1666;0\nWireConnection;1658;1;1657;0\nWireConnection;1665;0;1671;0\nWireConnection;2841;0;2842;0\nWireConnection;2195;0;2187;0\nWireConnection;2195;1;2178;5\nWireConnection;2839;0;2840;0\nWireConnection;2839;1;2841;3\nWireConnection;2286;0;2290;0\nWireConnection;2286;1;2289;0\nWireConnection;2286;2;2178;4\nWireConnection;2286;3;2285;0\nWireConnection;2286;4;2178;6\nWireConnection;2286;5;2178;7\nWireConnection;2286;6;2178;5\nWireConnection;2286;7;2287;0\nWireConnection;2286;8;2191;0\nWireConnection;1679;0;1674;0\nWireConnection;1679;1;1658;0\nWireConnection;1679;2;1665;0\nWireConnection;2843;0;2543;0\nWireConnection;2259;0;2188;0\nWireConnection;2221;0;2178;5\nWireConnection;2221;1;2187;0\nWireConnection;1828;0;1826;0\nWireConnection;2569;0;2844;0\nWireConnection;2569;1;2734;0\nWireConnection;2496;0;2490;0\nWireConnection;2496;1;2508;0\nWireConnection;2496;2;2733;0\nWireConnection;2845;0;2604;0\nWireConnection;81;0;318;0\nWireConnection;81;1;80;0\nWireConnection;2205;0;2206;0\nWireConnection;2205;1;2178;7\nWireConnection;2487;1;2502;0\nWireConnection;1674;0;1680;0\nWireConnection;2178;1;2180;0\nWireConnection;2178;2;2368;0\nWireConnection;2848;0;2621;0\nWireConnection;2718;0;2324;2\nWireConnection;2461;0;2458;0\nWireConnection;2461;1;2462;1\nWireConnection;2498;0;2687;0\nWireConnection;2609;0;2601;0\nWireConnection;2609;1;2600;0\nWireConnection;2609;2;2546;1\nWireConnection;2609;3;2845;0\nWireConnection;2609;4;2735;0\nWireConnection;2609;5;2723;0\nWireConnection;2609;6;2838;0\nWireConnection;2609;7;2608;0\nWireConnection;2284;0;2276;0\nWireConnection;2546;0;2545;0\nWireConnection;2276;0;2275;0\nWireConnection;1826;0;1832;0\nWireConnection;54;1;45;0\nWireConnection;54;2;42;0\nWireConnection;1896;0;1906;0\nWireConnection;1896;1;1906;0\nWireConnection;2249;0;2189;5\nWireConnection;2249;1;2252;0\nWireConnection;2249;2;2255;0\nWireConnection;2249;3;2178;6\nWireConnection;2249;4;2247;0\nWireConnection;2249;5;2187;0\nWireConnection;1671;0;1659;0\nWireConnection;1671;1;1672;0\nWireConnection;1661;0;1670;0\nWireConnection;1661;1;1656;0\nWireConnection;2227;0;2256;0\nWireConnection;2227;1;2362;0\nWireConnection;46;1;324;0\nWireConnection;46;2;86;0\nWireConnection;46;3;28;0\nWireConnection;2847;0;2619;0\nWireConnection;2838;0;2835;0\nWireConnection;2838;1;2841;1\nWireConnection;1677;0;1667;0\nWireConnection;1677;1;1660;0\nWireConnection;1916;0;1917;0\nWireConnection;1662;0;1669;0\nWireConnection;1662;1;1676;0\nWireConnection;27;0;299;0\nWireConnection;2850;0;2638;0\nWireConnection;1881;1;1896;0\nWireConnection;2197;0;2178;4\nWireConnection;2197;1;2178;6\nWireConnection;2197;2;2187;0\nWireConnection;2207;0;2194;0\nWireConnection;2207;1;2201;0\nWireConnection;2207;2;2196;0\nWireConnection;2207;3;2178;4\nWireConnection;2207;4;2178;6\nWireConnection;2420;1;2409;0\nWireConnection;2216;0;2201;0\nWireConnection;2216;1;2196;0\nWireConnection;2216;2;2194;0\nWireConnection;2486;1;2501;0\nWireConnection;2783;0;1847;0\nWireConnection;2421;1;2411;0\nWireConnection;312;0;89;0\nWireConnection;2458;0;2459;0\nWireConnection;1675;0;1678;0\nWireConnection;1675;1;1674;0\nWireConnection;2507;0;2671;0\nWireConnection;2187;0;2259;0\nWireConnection;2490;1;2500;0\nWireConnection;2626;0;2618;0\nWireConnection;2626;1;2617;0\nWireConnection;2626;2;2546;2\nWireConnection;2626;3;2848;0\nWireConnection;2626;4;2736;0\nWireConnection;2626;5;2724;0\nWireConnection;2626;6;2837;0\nWireConnection;2626;7;2625;0\nWireConnection;2880;0;2879;0\nWireConnection;2880;1;2885;1\nWireConnection;1669;0;1661;0\nWireConnection;316;0;2404;0\nWireConnection;2617;0;2847;0\nWireConnection;2617;1;2736;0\nWireConnection;2643;0;2635;0\nWireConnection;2643;1;2634;0\nWireConnection;2643;2;2546;3\nWireConnection;2643;3;2850;0\nWireConnection;2643;4;2737;0\nWireConnection;2643;5;2725;0\nWireConnection;2643;6;2839;0\nWireConnection;2643;7;2642;0\nWireConnection;2837;0;2833;0\nWireConnection;2837;1;2841;2\nWireConnection;302;0;2768;0\nWireConnection;2316;0;2317;0\nWireConnection;2316;1;2318;0\nWireConnection;285;0;2681;0\nWireConnection;2715;0;2324;1\nWireConnection;2768;0;2686;0\nWireConnection;2879;0;2885;0\nWireConnection;2879;1;2886;0\nWireConnection;2285;0;2276;3\nWireConnection;2896;0;2880;0\nWireConnection;323;0;2682;0\nWireConnection;1917;0;1915;0\nWireConnection;1917;1;1918;0\nWireConnection;2849;0;2636;0\nWireConnection;2634;0;2849;0\nWireConnection;2634;1;2737;0\nWireConnection;2886;0;2891;0\nWireConnection;2886;1;2894;0\nWireConnection;2886;2;2876;0\nWireConnection;2886;3;2884;0\nWireConnection;2886;4;2892;0\nWireConnection;1882;0;1881;3\nWireConnection;1882;1;1665;0\nWireConnection;2904;0;2903;0\nWireConnection;2509;0;2494;0\nWireConnection;2910;0;2911;0\nWireConnection;2910;1;234;0\nWireConnection;2705;0;2711;0\nWireConnection;0;0;108;0\nASEEND*/\n//CHKSM=9E9CD4E027DBBEFC0F910F93EB5606FA95BD4F88"
  m_functionName: 
  m_description: Baked Cubemap and Ambient Reflections
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 1
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 0
  m_customNodeCategory: Moriohs Toon Shader
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
